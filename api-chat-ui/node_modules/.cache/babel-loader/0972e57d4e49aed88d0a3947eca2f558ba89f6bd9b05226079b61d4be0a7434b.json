{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzgiC\\\\WebstormProjects\\\\api-chat\\\\api-chat-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { db } from './firebase'; // Make sure this file exports a valid Firestore db\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Subscribe to real-time updates\n    const q = query(collection(db, 'messages'), orderBy('timestamp'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const chat = snapshot.docs.map(doc => doc.data());\n      setMessages(chat);\n    });\n    return () => unsubscribe(); // Cleanup on unmount\n  }, []);\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      message: message,\n      response: 'Typing...',\n      timestamp: serverTimestamp()\n    };\n\n    // Add user message with placeholder response\n    const docRef = await addDoc(collection(db, 'messages'), userMessage);\n    setMessage('');\n    try {\n      const res = await fetch('http://localhost:3001/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await res.json();\n      const reply = data.response || \"No response\";\n\n      // Update Firestore message with actual response\n      await docRef.update({\n        response: reply,\n        timestamp: serverTimestamp()\n      });\n    } catch (err) {\n      await docRef.update({\n        response: 'Error contacting server.',\n        timestamp: serverTimestamp()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message user\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message bot\",\n            children: msg.response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          placeholder: \"Type your message...\",\n          onChange: e => setMessage(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","App","_s","message","setMessage","messages","setMessages","q","unsubscribe","snapshot","chat","docs","map","doc","data","handleSend","trim","userMessage","response","timestamp","docRef","res","fetch","method","headers","body","JSON","stringify","json","reply","update","err","className","children","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/EzgiC/WebstormProjects/api-chat/api-chat-ui/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { db } from './firebase'; // Make sure this file exports a valid Firestore db\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from 'firebase/firestore';\n\nfunction App() {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        // Subscribe to real-time updates\n        const q = query(collection(db, 'messages'), orderBy('timestamp'));\n        const unsubscribe = onSnapshot(q, (snapshot) => {\n            const chat = snapshot.docs.map(doc => doc.data());\n            setMessages(chat);\n        });\n\n        return () => unsubscribe(); // Cleanup on unmount\n    }, []);\n\n    const handleSend = async () => {\n        if (!message.trim()) return;\n\n        const userMessage = {\n            message: message,\n            response: 'Typing...',\n            timestamp: serverTimestamp()\n        };\n\n        // Add user message with placeholder response\n        const docRef = await addDoc(collection(db, 'messages'), userMessage);\n\n        setMessage('');\n\n        try {\n            const res = await fetch('http://localhost:3001/chat', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ message }),\n            });\n\n            const data = await res.json();\n            const reply = data.response || \"No response\";\n\n            // Update Firestore message with actual response\n            await docRef.update({\n                response: reply,\n                timestamp: serverTimestamp()\n            });\n\n        } catch (err) {\n            await docRef.update({\n                response: 'Error contacting server.',\n                timestamp: serverTimestamp()\n            });\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"chat-container\">\n                <div className=\"messages\">\n                    {messages.map((msg, index) => (\n                        <div key={index} className=\"message-block\">\n                            <div className=\"message user\">{msg.message}</div>\n                            <div className=\"message bot\">{msg.response}</div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        value={message}\n                        placeholder=\"Type your message...\"\n                        onChange={(e) => setMessage(e.target.value)}\n                        onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n                    />\n                    <button onClick={handleSend}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}